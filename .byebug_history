c
ap Expense.last
n
year_add
n
month
n
c
month
n
c
n
year_add
n
month
n
month
year_add
n
c
n
month
year_add
n
c
year_add
n
year_add
month
n
exit
year
n
times
month
n
c
i
c
i
expense_params[:year].to_i + i
expense_params[:year].to_i 
year
n
month
n
exit
n
expense_params[:month].to_i + (expense_params[:month].to_i + i) % 12
expense_params[:month].to_i + (expense_params[:month].to_i + i)
expense_params[:month].to_i
exit
times
year
n
month
n
c
ap @incomes.joins(:currency).group('currencies.name').sum(:amount)c
ap @incomes.joins(:currency).group('currencies.name').sum(:amount)
ap @incomes.group('currency.name').sum(:amount)
ap @incomes.group(:currency).sum(:amount)
ap @incomes.group(:currency).sum
ap @incomes.group(:currency).count
ap @incomes.group_by{|income| income.currency_id}.sum(:amount)
ap @incomes.group_by{|income| income.currency_id}.sum;
ap @incomes.group_by{|income| income.currency}.sum;
@incomes.group_by{|income| income.currency}.sum
c
@incomes = @incomes.joins(:income_source).where(income_sources: { name: params[:filter][:income_source] })
@incomes
c
@incomes.joins(:income_source).where(income_sources: { name: params[:filter][:income_source] })c
@incomes.joins(:income_source).where(income_sources: { name: params[:filter][:income_source] })
@incomes.joins(:income_source).where(income_source: { name: params[:filter][:income_source] })
@incomes = Income.all
@incomes.joins(:income_source).where(income_source: { name: params[:filter][:income_source] })
n
c
@incomes
n
ap @incomes
@incomes.count
n
c
params[:filter][:year].present?n
Income.where(year: params[:filter][:year])params[:filter][:year].present?
Income.where(year: params[:filter][:year])
params
c
ap @incomes
ap @incomes.joins(:income_source)
params[:filter][:income_source]
IncomeSource.inspect
@incomes.joins(:income_source).where(income_source: { name: params[:filter][:income_source] })
n
c
ap @incomes.joins(:income_source)
@incomes.joins(:income_source)
@incomes.joins(:income_source).where(income_source: { name: params[:filter][:income_source] })
@incomes.joins(:income_source)
n
c
@incomes
@incomes.joins(:income_source)
@income.joins(:income_source)
n
@income.joins(:income_source)
Income.last
n
c
n
c
n
c
params
c
params
c
params
c
params
c
params
c
params
c
params
parms
c
params
c
params
c
params
c
params
c
@rates.find_by!(from: self.name, to: currency)
n
self
currency
c
amount
currency
exit
Expense.find(2)
c
ap ex
ex
exit
ap @incomes.group_by{|i| [i.income_source.name , i.currency.name]}.map{|r| r}
ap @incomes.group_by{|i| [i.income_source.name , i.currency.name]}
ap @incomes.group_by{|i| [i.income_source.name , i.currency.name]}.sum(:amount)
ap @incomes.group_by{|i| [i.income_source.name , i.currency.name]}
ap @incomes.group_by{|i| [i.income_source_id , i.currency_id]}
@incomes.group_by{|i| [i.income_source_id , i.currency_id]}
@incomes.group_by{|i| [i.income_source_id , e.currency_id]}
ap @incomes.group_by(&:income_source).sum(:amount)
ap @incomes.group_by(&:income_source)
@incomes.group_by(&:income_source)
@incomes.group_by(:income_source)
c
@incomes.map(&:year)
@incomes.map(&:month)
ap @expenses.map(&:month)
ap @expenses.map(&:year)
ap @expenses.map(&:year, &:month)
ap @expenses.map(&:comments)
@expenses.map(&:comments)
params
parmas
@expenses.count
@incomes.count
c
params
c
n
c
ap params
params
c
params[:filter].present?
c
v
n
c
params
c
params
c
ap @incomes.group_by(&:income_source).sum(:amount)
ap @incomes.group_by(&:income_source)
c
ap @incomes.group_by(&:income_source)
c
ap @incomes.group_by(&:income_source)
@incomes.group_by(&:income_source)
c
ap @incomes.group_by(&:income_source).map {|k,v| {name: k.name, value: v.map(&:amount).sum} }
ap @incomes.group_by(&:income_source).map {|k,v| {name: k.name, value: v.map(&:amount)} }
ap @incomes.group_by(&:income_source).map {|k,v| {name: k.name, value: v} }
ap @incomes.group_by(&:income_source).map {|k,v| {k.name, v} }
ap @incomes.group_by(&:income_source).map {|k,v| [k.name, v] }
ap @incomes.group_by(&:income_source).map {|k,v| [k.name, v.map(:&amount)] }
ap @incomes.group_by(&:income_source).map {|k,v| [k.name, v.length] }
ap @incomes.group_by(&:income_source.name).map {|k,v| [k, v.length] }
ap @incomes.group_by(&:income_source_id).map {|k,v| [k, v.length] }
ap @incomes.group_by(&:income_source).map {|k,v| [k, v.length] }
ap @incomes.count
ap @incomes.group_by(&:income_source)
ap @incomes.group_by(&:income_source).map {|k,v| {a: k}}
ap @incomes.group_by(&:income_source).map {|k,v| [k, v.length]}
@incomes.group_by(&:income_source).map {|k,v| [k, v.length]}
@incomes.group_by(&:name).map {|k,v| [k, v.length]}
ap Income.joins(:income_source).group('income_sources.name').sum(:amount)
Income.joins(:income_source).group('income_sources.name').sum(:amount)
ap Income.joins(:income_source).group('income_sources.name').sum(:amount)
Income.joins(:income_source).group('income_sources.name').sum(:amount)
@incomes
c
@rates.find_by(from: from, to: to)
@rates
n
exit
ap Income.last
Income.last
Income.create!(income_params)
c
parc
Income.create!(income_params)
c
Income.create!(income_params)
income_params
c
income_params
c
Income.create!(income_params)
income_params
c
Income.create!(income_params)
@income
income_params
c
income_params
@income
c
income_params
c
income_params
ap params
params
exit
ap Income.last.income_source
ap Income.last.income_sourec
ap Income.all
